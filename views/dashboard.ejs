<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Author-Books</title>
    <script src="https://www.gstatic.com/firebasejs/9.5.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.5.0/firebase-auth.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        /* Basic styles for the page */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f2f2f2;
        }

        /* Navigation bar styles */
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: rgb(0, 47, 128);
            padding: 10px;
            color: #fff;
        }

        /* Logo and project name */
        .logo {
            font-size: 24px;
            font-weight: bold;
        }

        /* Navigation links */
        .nav-links {
            list-style: none;
            display: flex;
        }

        .nav-links li {
            margin-right: 20px;
        }

        .nav-links a {
            text-decoration: none;
            color: #fff;
        }

        /* Search container styles */
        .search-container {
            text-align: center;
            margin-top: 20px;
        }

        .search-box {
            width: 100%;
            max-width: 400px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }

        .search-button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
        }

        .search-button:hover {
            background-color: #0056b3;
        }

        /* Empty data display tag */
        .data-display {
        margin-top: 20px;
        padding: 20px;
        border-radius: 5px;
        color: #333;
        border: #f2f2f2;
        
        }
        
        


        /* Logout and about us buttons */
        .logout-button, .about-us-button {
            background-color: rgb(0, 38, 128);
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            font-size: 16px;
            margin-right: 10px;
        }
        body, html {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            height: 100%; /* Set the height to 100% to cover the entire viewport */
            background-image: linear-gradient(to bottom, #ccc, #999); /* Gray gradient */
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            color: #fff;
        }

        .logout-button:hover, .about-us-button:hover {
            background-color: rgb(0, 64, 255);
        }

        /* Centered text */
        .text-center {
            text-align: center;
        }

      

        
        .search-text {
            font-size: 28px;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2); /* Add a subtle shadow */
        }

        .links-text {
            font-size: 20px;
            color: #444;
        }
    </style>
</head>
<body>
    <div class="navbar">
        <div class="logo">Author-Books</div>
        <ul class="nav-links">
            <li><a href="/" class="logout-button">Logout</a></li>
            
        </ul>
    </div>
    <p class="text-center search-text">EXPLORE</p>
    <div class="search-container">
        <input type="text" class="search-box" placeholder="Search...">
        <button class="search-button">Search</button>
    </div><br><br>
    <b><p class="text-center links-text">Books written by Author</p></b>
    <div class="data-display">
        <!-- Data will be displayed here after searching -->
    </div>
    <script>
      // ... (your Firebase and Telegram Bot code) ...
        const searchBox = document.querySelector('.search-box');
        const searchButton = document.querySelector('.search-button');
        const dataDisplay = document.querySelector('.data-display');
        const apiKey = 'AIzaSyDlQapsRJ-Dgo_3nne9CJyIGCbkDrQSito';
        const searchEngineId = '365172997b8ec4a98';

      // Add an event listener to the search button
      searchButton.addEventListener('click', () => {
          const authorName = searchBox.value.trim(); // Get the author's name

          if (authorName) {
              // Make an API request to fetch books by the author
              axios
                  .get(`https://www.googleapis.com/books/v1/volumes?q=inauthor:"${encodeURIComponent(authorName)}"`)
                  .then((response) => {
                      const booksByAuthor = response.data.items;

                      // Clear previous search results
                      dataDisplay.innerHTML = '';

                      if (booksByAuthor && booksByAuthor.length > 0) {
                          // Create an unordered list to hold the books by the author
                          const resultList = document.createElement('ul');

                          // Loop through the books and create list items
                          booksByAuthor.forEach((book) => {
                              const title = book.volumeInfo.title;
                              const authors = book.volumeInfo.authors.join(', ');

                              // Create a list item for each book
                              const listItem = document.createElement('li');
                              listItem.innerHTML = `<strong>${title}</strong> by ${authors}`;

                              // Append the list item to the result list
                              resultList.appendChild(listItem);
                          });

                          // Append the result list to the dataDisplay element
                          dataDisplay.appendChild(resultList);
                      } else {
                          // Display a message if no books by the author are found
                          dataDisplay.textContent = 'No books by this author found.';
                      }
                  })
                  .catch((error) => {
                      console.error(error);
                      // Display an error message if the API request fails
                      dataDisplay.textContent = 'An error occurred while searching.';
                  });
          }
      });

      // ... (your logout button and animation code) ...
  </script>
    
</body>
</html>
